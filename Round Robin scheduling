#include <stdio.h>

int main() {
    int n = 4; // Number of processes
    int tq = 4; // Time quantum
    int bt[] = {6, 8, 7, 3}; // Burst times
    int rem[4], wt[4] = {0}, tat[4], t = 0;

    // Copy burst times to remaining times
    for (int i = 0; i < n; i++) rem[i] = bt[i];

    // Round Robin Logic
    while (1) {
        int done = 1;
        for (int i = 0; i < n; i++) {
            if (rem[i] > 0) {
                done = 0;
                if (rem[i] > tq) {
                    t += tq;
                    rem[i] -= tq;
                } else {
                    t += rem[i];
                    wt[i] = t - bt[i];
                    rem[i] = 0;
                }
            }
        }
        if (done) break;
    }

    // Calculate Turnaround Time (TAT = BT + WT)
    for (int i = 0; i < n; i++) tat[i] = bt[i] + wt[i];

    // Output the results
    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++)
        printf("P%d\t%d\t\t%d\t\t%d\n", i + 1, bt[i], wt[i], tat[i]);

    return 0;
}
